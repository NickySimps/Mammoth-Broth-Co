<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mammoth Broth Co. - Primal Nourishment</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Knewave&family=Source+Sans+Pro:wght@400;600&display=swap" rel="stylesheet">

    <style>
        /* --- Custom Styles for Cave Aesthetic --- */
        :root {
            --mouse-x: 50%;
            --mouse-y: 50%;
            --torch-radius: 300px; /* Radius of the main light area */
            --torch-glow-radius: 600px; /* Radius of the outer glow */
        }

        @media (max-width: 768px) {
             :root {
                --torch-radius: 200px;
                --torch-glow-radius: 400px;
            }
        }

        body {
            font-family: 'Source Sans Pro', sans-serif;
            background-color: #1a1a1a;
            /* Tiled cave wall texture */
            background-image: url('https://www.transparenttextures.com/patterns/rocky-wall.png');
            position: relative;
            overflow-x: hidden;
        }

        /* The Torchlight Effect */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background: radial-gradient(
                circle at var(--mouse-x) var(--mouse-y),
                rgba(0, 0, 0, 0) 0,
                rgba(0, 0, 0, 0) var(--torch-radius),
                rgba(0, 0, 0, 0.80) calc(var(--torch-radius) + 100px),
                rgba(0, 0, 0, 0.90) var(--torch-glow-radius),
                #000 100%
            );
            pointer-events: none; /* Allows clicking through the overlay */
        }

        .font-caveman {
            font-family: 'Knewave', cursive;
            letter-spacing: 2px;
            color: #EADDCA; /* A nice, earthy beige for text */
            text-shadow: 2px 2px 4px rgba(0,0,0,0.7);
        }

        /* Cave Painting Styles */
        .cave-painting {
            background-repeat: no-repeat;
            background-size: contain;
            opacity: 0.1;
            position: absolute;
            pointer-events: none;
        }

        /* Styling UI elements to look primitive */
        .btn-primitive {
            background-color: #A0937D; /* Beige from image */
            border: 2px solid #605442; /* Darker beige */
            color: #1a1a1a;
            font-weight: bold;
            box-shadow: inset 0 0 10px rgba(0,0,0,0.3), 2px 2px 5px rgba(0,0,0,0.3);
            transition: all 0.2s ease-in-out;
        }
        .btn-primitive:hover {
            background-color: #B8A990;
            transform: translateY(-2px);
            box-shadow: inset 0 0 10px rgba(0,0,0,0.3), 4px 4px 8px rgba(0,0,0,0.4);
        }

        .input-primitive {
            background-color: #332929;
            border: 2px solid #483434;
        }
        .input-primitive:focus {
             border-color: #A0937D;
             outline: none;
             box-shadow: 0 0 15px rgba(160, 147, 125, 0.5);
        }
        
        .panel-primitive {
            background-color: rgba(26, 26, 26, 0.7);
            backdrop-filter: blur(5px);
            border: 2px solid #483434;
            box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
        }

        /* Hide all sections by default */
        main > section {
            display: none;
        }
        /* Show the active section */
        main > section.active {
            display: block;
        }

    </style>
</head>
<body class="text-stone-300">

    <!-- Cave Painting Decorations -->
    <div class="cave-painting" style="background-image: url('data:image/svg+xml;utf8,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><path d=%22M50 10 C 20 20, 20 80, 50 90 M50 10 C 80 20, 80 80, 50 90 M20 50 C 30 40, 70 40, 80 50%22 stroke=%22%23A0937D%22 stroke-width=%222%22 fill=%22none%22 stroke-linecap=%22round%22/></svg>'); top: 10%; left: 5%; width: 150px; height: 150px; transform: rotate(-15deg);"></div>
    <div class="cave-painting" style="background-image: url('data:image/svg+xml;utf8,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><path d=%22M20 80 L 80 20 M20 20 L 80 80%22 stroke=%22%23A0937D%22 stroke-width=%222%22 fill=%22none%22 stroke-linecap=%22round%22/></svg>'); bottom: 15%; right: 10%; width: 100px; height: 100px; transform: rotate(20deg);"></div>
    <div class="cave-painting" style="background-image: url('data:image/svg+xml;utf8,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><path d=%22M30 70 Q 50 90, 70 70 M30 70 L 20 40 L 30 45 M70 70 L 80 40 L 70 45 M40 50 L 60 50 M50 50 L 50 30 M45 30 L 55 30%22 stroke=%22%23A0937D%22 stroke-width=%222%22 fill=%22none%22 stroke-linecap=%22round%22/></svg>'); top: 20%; right: 8%; width: 120px; height: 120px;"></div>


    <header class="sticky top-0 z-40">
        <nav class="container mx-auto px-6 py-4 flex justify-between items-center panel-primitive mt-4 rounded-xl">
            <div class="flex items-center space-x-4 cursor-pointer" data-page="home">
                <!-- Mammoth Icon -->
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" class="h-12 w-12 text-stone-200" fill="currentColor"><path d="M85.1,42.2c-2-1.5-4.4-2.4-7-2.9c-0.7-1.2-1.5-2.4-2.4-3.5c-1.1-1.3-2.3-2.4-3.7-3.2c-1.8-1.1-3.7-1.9-5.6-2.4 c-2.7-0.7-5.4-1-8.1-1c-4.9,0-9.6,1.1-13.8,3.1c-2.3,1.1-4.4,2.6-6.2,4.5c-1.8,1.8-3.3,4-4.5,6.2c-1.4,2.8-2.2,5.9-2.2,9.1 c0,2.8,0.3,5.5,1,8.1c0.5,1.9,1.3,3.9,2.4,5.6c1.1,1.8,2.3,3.3,3.7,4.7c1.4,1.4,3,2.6,4.7,3.6c3.5,2,7.4,3.1,11.5,3.1 c4.6,0,9-1.3,12.8-3.7c1.9-1.2,3.7-2.7,5.1-4.4c1.5-1.7,2.7-3.7,3.7-5.9c0.9-2.1,1.6-4.4,2-6.7c0.1-1,0.2-1.9,0.2-2.9 c0-2.8-0.5-5.6-1.5-8.1C86.3,47.8,85.8,45,85.1,42.2z M50,82.5c-12.3,0-22.3-10-22.3-22.3s10-22.3,22.3-22.3s22.3,10,22.3,22.3 S62.3,82.5,50,82.5z"/><path d="M68.8,38.9c-1.4-2.1-3-4-4.9-5.7c-2.4-2.1-5.1-3.8-8-5c-3.7-1.5-7.6-2.3-11.6-2.3c-4.4,0-8.7,0.9-12.7,2.6 c-4,1.7-7.6,4.1-10.6,7.1c-1.5,1.5-2.8,3.1-3.9,4.9c-0.6,1-1.1,2-1.5,3c-0.8,2.1-1.4,4.2-1.8,6.4c-0.3,1.8-0.5,3.6-0.5,5.4 c0,5.2,1.4,10.2,4,14.6c2.6,4.4,6.4,7.8,11,9.9c4.6,2.1,9.6,3.2,14.8,3.2c5.9,0,11.5-1.5,16.5-4.4c4.9-2.9,8.9-7,11.6-12 c1.4-2.5,2.4-5.2,3-8c0.4-1.8,0.6-3.6,0.6-5.4C81.3,47.1,76.6,41.8,68.8,38.9z M72.8,62.2c0,12.6-10.2,22.8-22.8,22.8 S27.2,74.8,27.2,62.2S37.4,39.4,50,39.4S72.8,49.6,72.8,62.2z"/></svg>
                <span class="text-2xl font-caveman tracking-wider">Mammoth Broth Co.</span>
            </div>
            <div class="hidden md:flex items-center space-x-8 font-caveman text-lg">
                <a href="#" data-page="home" class="nav-link text-stone-300 hover:text-white transition-colors">Home</a>
                <a href="#" data-page="products" class="nav-link text-stone-300 hover:text-white transition-colors">Broths</a>
                <a href="#" data-page="about" class="nav-link text-stone-300 hover:text-white transition-colors">Our Story</a>
            </div>
            <div class="flex items-center">
                 <button data-page="cart" class="nav-link flex items-center space-x-2 text-stone-300 hover:text-white transition-colors">
                    <div id="cart-icon-container" class="relative"></div>
                    <span class="font-caveman text-lg">Cart</span>
                </button>
            </div>
        </nav>
    </header>

    <main class="container mx-auto px-6 py-12 z-10 relative">
        
        <!-- Home Page -->
        <section id="home" class="active">
             <div class="text-center my-16">
                <h1 class="text-6xl md:text-8xl font-caveman mb-4">Primal Nourishment</h1>
                <p class="text-xl md:text-2xl max-w-2xl mx-auto mb-8 text-stone-300">Slow-simmered power from the dawn of time. Pure. Potent. Paleo.</p>
                <button data-page="products" class="nav-link btn-primitive font-caveman text-2xl py-3 px-8 rounded-lg">Hunt for Broth</button>
            </div>
        </section>

        <!-- Products Page -->
        <section id="products">
            <h1 class="text-6xl font-caveman text-center mb-12">The Hunt's Bounty</h1>
            <div id="product-list" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10">
                <!-- Product items will be injected here by JS -->
            </div>
        </section>

        <!-- About Page -->
        <section id="about">
            <div class="max-w-4xl mx-auto panel-primitive p-8 md:p-12 rounded-lg">
                <h1 class="text-6xl font-caveman text-center mb-8">The Legend of the Broth</h1>
                <p class="text-lg text-stone-300 leading-relaxed mb-6 text-center">
                    In ages past, when giants roamed the earth, our ancestors knew the secret power locked within the bones. A fire, a pot, and patience... this was the first medicine.
                </p>
                <div class="prose prose-lg max-w-none text-stone-300 prose-invert prose-headings:font-caveman prose-headings:text-stone-200 prose-a:text-amber-400">
                    <h2>From Fire to Feast</h2>
                    <p>We honor the old ways. Every batch of Mammoth Broth is a ritual. We gather the strongest bones from pasture-raised beasts and simmer them over a slow, steady flame for a day and a night. We add herbs of the earth and pure water from ancient springs. The result is a broth thick with collagen and rich with the spirit of the wild.</p>
                    <h2>The Pact of the Herd</h2>
                    <p>Our pact is with the land. We partner with local tribes (farms) who respect the herd and the earth. Their animals roam free, eat well, and live strong. This is the only way to create a broth worthy of the mammoth's name. It is a difference you can feel in your bones.</p>
                </div>
            </div>
        </section>

        <!-- Cart Page -->
        <section id="cart">
            <h1 class="text-6xl font-caveman text-center mb-12">Your Cache</h1>
            <div id="cart-items-container" class="panel-primitive p-6 rounded-lg">
                <!-- Cart items will be injected here -->
            </div>
        </section>

    </main>

    <footer class="text-center py-8 text-stone-500 text-sm z-10 relative">
        <p>&copy; 2024 Mammoth Broth Co. All rights reserved by the tribe.</p>
    </footer>

    <!-- Modal for notifications -->
    <div id="modal" class="fixed inset-0 bg-black/60 flex items-center justify-center z-50 hidden">
        <div id="modal-content" class="panel-primitive p-8 rounded-lg text-center max-w-sm">
            <p id="modal-message" class="text-lg mb-6 text-stone-200"></p>
            <button id="modal-close" class="btn-primitive font-caveman text-xl py-2 px-6 rounded-lg">Close</button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- STATE & DATA ---
            const state = {
                currentPage: 'home',
                cart: [],
                products: [
                    { id: 1, name: 'Beef Bone Broth', description: '24-hour simmered, from pasture-raised beasts.', price: 20, image: 'https://placehold.co/600x400/c7bca1/4a3f35?text=Beef+Broth' },
                    { id: 2, name: 'Chicken Bone Broth', description: 'From wild birds of the open plains.', price: 18, image: 'https://placehold.co/600x400/f5f1e8/4a3f35?text=Chicken+Broth' },
                    { id: 3, name: 'Mushroom Medley Broth', description: 'A brew of potent earth-grown fungi.', price: 22, image: 'https://placehold.co/600x400/a0937d/4a3f35?text=Mushroom+Broth' },
                ]
            };

            // --- DOM ELEMENTS ---
            const main = document.querySelector('main');
            const navLinks = document.querySelectorAll('.nav-link');
            const productListContainer = document.getElementById('product-list');
            const cartIconContainer = document.getElementById('cart-icon-container');
            const cartItemsContainer = document.getElementById('cart-items-container');
            const modal = document.getElementById('modal');
            const modalMessage = document.getElementById('modal-message');
            const modalClose = document.getElementById('modal-close');

            // --- RENDER FUNCTIONS ---
            const renderProducts = () => {
                productListContainer.innerHTML = state.products.map(p => `
                    <div class="panel-primitive p-6 rounded-lg text-center flex flex-col justify-between">
                        <div>
                            <img src="${p.image}" alt="${p.name}" class="w-full h-64 object-cover rounded-md mb-4 border-2 border-stone-700"/>
                            <h3 class="text-3xl font-caveman mb-2">${p.name}</h3>
                            <p class="text-stone-400 mb-4">${p.description}</p>
                        </div>
                        <div class="mt-4">
                            <span class="text-3xl font-caveman text-stone-200">$${p.price}</span>
                            <button class="add-to-cart-btn btn-primitive font-caveman text-xl py-2 px-6 rounded-lg ml-4" data-id="${p.id}">Add to Cache</button>
                        </div>
                    </div>
                `).join('');
            };
            
            const renderCartIcon = () => {
                const count = state.cart.reduce((sum, item) => sum + item.quantity, 0);
                cartIconContainer.innerHTML = `
                    <svg class="h-8 w-8 text-stone-200" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path></svg>
                    ${count > 0 ? `<span class="absolute -top-2 -right-2 bg-red-700 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center font-sans">${count}</span>` : ''}
                `;
            };

            const renderCart = () => {
                if (state.cart.length === 0) {
                    cartItemsContainer.innerHTML = '<p class="text-center text-stone-400 py-8">Your cache is empty. The hunt awaits!</p>';
                    return;
                }

                const itemsHTML = state.cart.map(item => `
                    <div class="flex items-center justify-between p-4 border-b border-stone-700">
                        <div>
                            <h4 class="text-2xl font-caveman">${item.name}</h4>
                            <p class="text-stone-400">Quantity: ${item.quantity}</p>
                        </div>
                        <div class="text-right">
                             <p class="text-2xl font-caveman text-stone-200">$${item.price * item.quantity}</p>
                             <button class="remove-from-cart-btn text-red-500 hover:underline text-sm" data-id="${item.id}">Remove</button>
                        </div>
                    </div>
                `).join('');

                const subtotal = state.cart.reduce((sum, item) => sum + item.price * item.quantity, 0);

                cartItemsContainer.innerHTML = `
                    ${itemsHTML}
                    <div class="text-right p-4">
                        <p class="text-3xl font-caveman text-stone-200">Total: $${subtotal}</p>
                        <button class="btn-primitive font-caveman text-xl py-2 px-6 rounded-lg mt-4">Proceed to Checkout</button>
                    </div>
                `;
            };

            const renderPage = () => {
                document.querySelectorAll('main > section').forEach(s => s.classList.remove('active'));
                const activePage = document.getElementById(state.currentPage);
                if (activePage) {
                    activePage.classList.add('active');
                }
                
                // Trigger render functions based on page
                if (state.currentPage === 'products') renderProducts();
                if (state.currentPage === 'cart') renderCart();
            };

            // --- EVENT HANDLERS & LOGIC ---
            const showModal = (message) => {
                modalMessage.textContent = message;
                modal.classList.remove('hidden');
            };

            const hideModal = () => {
                modal.classList.add('hidden');
            };

            const addToCart = (productId) => {
                const product = state.products.find(p => p.id === productId);
                if (!product) return;

                const existingItem = state.cart.find(item => item.id === productId);
                if (existingItem) {
                    existingItem.quantity++;
                } else {
                    state.cart.push({ ...product, quantity: 1 });
                }
                renderCartIcon();
                showModal(`${product.name} added to cache!`);
            };
            
            const removeFromCart = (productId) => {
                state.cart = state.cart.filter(item => item.id !== productId);
                renderCart();
                renderCartIcon();
            };

            const handleNavClick = (page) => {
                state.currentPage = page;
                renderPage();
            };

            // --- EVENT LISTENERS ---
            // Torchlight effect
            document.addEventListener('mousemove', e => {
                document.documentElement.style.setProperty('--mouse-x', `${e.clientX}px`);
                document.documentElement.style.setProperty('--mouse-y', `${e.clientY}px`);
            });

            // Navigation
            navLinks.forEach(link => {
                link.addEventListener('click', (e) => {
                    e.preventDefault();
                    handleNavClick(link.dataset.page);
                });
            });

            // Add to Cart buttons (event delegation)
            main.addEventListener('click', e => {
                if (e.target.classList.contains('add-to-cart-btn')) {
                    const productId = parseInt(e.target.dataset.id, 10);
                    addToCart(productId);
                }
                 if (e.target.classList.contains('remove-from-cart-btn')) {
                    const productId = parseInt(e.target.dataset.id, 10);
                    removeFromCart(productId);
                }
            });

            // Modal close
            modalClose.addEventListener('click', hideModal);

            // --- INITIALIZATION ---
            renderPage();
            renderCartIcon();
        });
    </script>
</body>
</html>
